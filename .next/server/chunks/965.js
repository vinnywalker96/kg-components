"use strict";exports.id=965,exports.ids=[965],exports.modules={26965:(e,t,r)=>{r.d(t,{tJ:()=>o});let n=e=>t=>{try{let r=e(t);if(r instanceof Promise)return r;return{then:e=>n(e)(r),catch(e){return this}}}catch(e){return{then(e){return this},catch:t=>n(t)(e)}}},a=(e,t)=>(r,a,i)=>{let o,l,s={getStorage:()=>localStorage,serialize:JSON.stringify,deserialize:JSON.parse,partialize:e=>e,version:0,merge:(e,t)=>({...t,...e}),...t},d=!1,u=new Set,g=new Set;try{o=s.getStorage()}catch(e){}if(!o)return e((...e)=>{console.warn(`[zustand persist middleware] Unable to update item '${s.name}', the given storage is currently unavailable.`),r(...e)},a,i);let m=n(s.serialize),c=()=>{let e;let t=s.partialize({...a()}),r=m({state:t,version:s.version}).then(e=>o.setItem(s.name,e)).catch(t=>{e=t});if(e)throw e;return r},v=i.setState;i.setState=(e,t)=>{v(e,t),c()};let h=e((...e)=>{r(...e),c()},a,i),f=()=>{var e;if(!o)return;d=!1,u.forEach(e=>e(a()));let t=(null==(e=s.onRehydrateStorage)?void 0:e.call(s,a()))||void 0;return n(o.getItem.bind(o))(s.name).then(e=>{if(e)return s.deserialize(e)}).then(e=>{if(e){if("number"!=typeof e.version||e.version===s.version)return e.state;if(s.migrate)return s.migrate(e.state,e.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}}).then(e=>{var t;return r(l=s.merge(e,null!=(t=a())?t:h),!0),c()}).then(()=>{null==t||t(l,void 0),d=!0,g.forEach(e=>e(l))}).catch(e=>{null==t||t(void 0,e)})};return i.persist={setOptions:e=>{s={...s,...e},e.getStorage&&(o=e.getStorage())},clearStorage:()=>{null==o||o.removeItem(s.name)},getOptions:()=>s,rehydrate:()=>f(),hasHydrated:()=>d,onHydrate:e=>(u.add(e),()=>{u.delete(e)}),onFinishHydration:e=>(g.add(e),()=>{g.delete(e)})},f(),l||h},i=(e,t)=>(r,a,i)=>{let o,l={storage:function(e,t){let r;try{r=e()}catch(e){return}return{getItem:e=>{var n;let a=e=>null===e?null:JSON.parse(e,null==t?void 0:t.reviver),i=null!=(n=r.getItem(e))?n:null;return i instanceof Promise?i.then(a):a(i)},setItem:(e,n)=>r.setItem(e,JSON.stringify(n,null==t?void 0:t.replacer)),removeItem:e=>r.removeItem(e)}}(()=>localStorage),partialize:e=>e,version:0,merge:(e,t)=>({...t,...e}),...t},s=!1,d=new Set,u=new Set,g=l.storage;if(!g)return e((...e)=>{console.warn(`[zustand persist middleware] Unable to update item '${l.name}', the given storage is currently unavailable.`),r(...e)},a,i);let m=()=>{let e=l.partialize({...a()});return g.setItem(l.name,{state:e,version:l.version})},c=i.setState;i.setState=(e,t)=>{c(e,t),m()};let v=e((...e)=>{r(...e),m()},a,i);i.getInitialState=()=>v;let h=()=>{var e,t;if(!g)return;s=!1,d.forEach(e=>{var t;return e(null!=(t=a())?t:v)});let i=(null==(t=l.onRehydrateStorage)?void 0:t.call(l,null!=(e=a())?e:v))||void 0;return n(g.getItem.bind(g))(l.name).then(e=>{if(e){if("number"!=typeof e.version||e.version===l.version)return[!1,e.state];if(l.migrate)return[!0,l.migrate(e.state,e.version)];console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}return[!1,void 0]}).then(e=>{var t;let[n,i]=e;if(r(o=l.merge(i,null!=(t=a())?t:v),!0),n)return m()}).then(()=>{null==i||i(o,void 0),o=a(),s=!0,u.forEach(e=>e(o))}).catch(e=>{null==i||i(void 0,e)})};return i.persist={setOptions:e=>{l={...l,...e},e.storage&&(g=e.storage)},clearStorage:()=>{null==g||g.removeItem(l.name)},getOptions:()=>l,rehydrate:()=>h(),hasHydrated:()=>s,onHydrate:e=>(d.add(e),()=>{d.delete(e)}),onFinishHydration:e=>(u.add(e),()=>{u.delete(e)})},l.skipHydration||h(),o||v},o=(e,t)=>"getStorage"in t||"serialize"in t||"deserialize"in t?(console.warn("[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead."),a(e,t)):i(e,t)}};